

Singleton模式主要作用是保证在Java应用程序中，
一个类Class只有一个实例存在   其他程序使用这个类时，就可以共享这类的信息，那么使用静态变量也能实现信息共享，为什么还用单例模式呢？
	因为  静态变量和对象相比  静态变量生命周期过长（随着类的加载而存在，随着jvm的退出而消亡）

使用Singleton的好处还在于可以节省内存，
因为它限制了实例的个数，有利于Java垃圾回收

单例的适用场景：类中没有可以修改的成员变量（这个类没有状态）如果存在可以修改的成员变量
会产生线程安全的问题，不建议使用，单例模式无法继承，所以无法扩展无法更换它的实现。